<% if current_user.present? %>
  <% display_api_key = current_user.api_key %>
<% else %>
  <% display_api_key = "3695627b56d99b0eb392131d" %>
<% end %>

<h2>Personal Git Commit Statistics</h2>
<p>
  Simply make a <code>POST</code> request to track your commits:
</p>
<pre>http://hulkort.herokuapp.com/api/commits/?api_key=<%= display_api_key %></pre>
<% unless current_user.present? %>
  <p>
    This is an example! Please <%= link_to "sign in", sign_in_path %> to see your personal URL and API key.
  </p>
<% end %>

<h2>Let's automate this!</h2>
<p>
  Git has so called <a href="http://book.git-scm.com/5_git_hooks.html">Git Hooks</a>! Simply put a hook is a script which is executed every time you use a certain git command. With the help of a <code>post-commit</code> hook it's easy to ping the Hulkort API automatically:
</p>
<pre>
<span># Create the post-commit hook somewhere</span>
mkdir ~/development/git-hooks
cd ~/development/git-hooks
echo "#!/bin/bash" >> post-commit
echo "wget --spider -q http://hulkort.herokuapp.com/api/commits/?api_key=<%= display_api_key %>" >> post-commit

<span># Find the folder where Git stores it's templates</span>
<span># A good place to start looking is '/usr/share/git-core/'</span>
find /usr -type d -name "hooks"
/usr/share/git-core/templates/hooks

<span># Link the post-commit hook into your template hooks</span>
cd /usr/share/git-core/templates/hooks
ln -s ~/development/git-hooks/post-commit post-commit
</pre>
<p>
  From now on all new Git repositories you create will have the hook and will therefore track your commits. To add the hook to an already existing repository you just run <code>git init</code> again. Git will re-initialize the repository and copy the <code>post-commit</code> hook.
</p>

<h2>What happened?</h2>

<p>
  In order to get executed a hook has to be in the <code>.git/hooks</code> directory of the repository. Nobody wants to add the <code>post-commit</code> hook by hand to every new repository. Instead we use a template and let Git do all the work.
</p>

<p>
  Whenever you run <code>git init</code> Git will copy the template files into the repositorys <code>.git</code> directory.
</p>
<p>
  So all we have to do is place our <code>post-commit</code> hook in the <code>git-core/templates/hooks</code> directory. To make things clean we just link it, this way we can easily edit the hook anytime.
</p>